# @secrets = Secret.where(user_id: params[:id])
# @secretCount = Secret.where(params[:id]).joins(:likes).group(:content).select("COUNT(likes.id)")
# 			<% @secretCount.each do |s| %>
# 			<%= s %>

Secret.where(user_id: 1).joins(:likes).group(:content).select('content', "COUNT(likes.id)")
# Secret.where(user_id: 1).joins(:likes).joins(:user).group(:content).select('content', "COUNT(likes.id)")

Secret.joins(:likes).joins(:user).group(:content).select('content', "COUNT(likes.id)", "first_name")

Like.where(user_id: 1).count
Like.where(user_id: 1).joins(:secret)
#in terminal


rails g model User name:string email:string password:string
rails g model User name:string email:string password:string password_confirmation:string

rails g model Secret content:text user:references
rails g model Like user:references secret:references

#rails g migration nameOfMigration
#to modify the existing db
rails g migration modifiedSecretModel
db:migrate
#modifed the following file
#20150612201717_modified_secret_model.rb
class ModifiedSecretModel < ActiveRecord::Migration
  def change
  	add_reference :secrets, :user, index: true, foreign_key: true
  end
end


rake db:migrate

rails g controller Secrets index new create show edit update destroy
rails g controller Likes index new create show edit update destroy

# rails g controller Products index new create show edit update destroy
# rails g controller Comments index new create show edit update destroy

#user.rb
has_many: secrets
has_many: liked_secretes, through: likes, source: users
has_many: likes

#secret.rb
has_many: users
has_many: liking_users, through: likes, source: secrets
has_many: likes



##rails c
User.new
Secret.new
Like.new

User.create(name: "Chiu", email: "chiu@gmail.com", password: 11)
User.create(name: "Taka", email: "taka@gmail.com", password: 11)
User.first.likes.User.first

Secret.create(content: "I love meaty bone")
Secret.create(content: "I like Pat A Choux")

Like.create(user_id: User.find(1).id, secret_id: Secret.first.id)
Like.create(user_id: User.last.id, secret_id: Secret.last.id)

User.first.secrets.create(content: "I like pat a choux")
User.first.likes.secrets(secret: Secret.first)

#count
Secret.all.count
User.find(1).secrets.count


# User.first.liked_secrets.new
User.first.liked_secrets.all

User.first.liked_secrets.select("content")
User.first.liked_secrets.select(:content)

Secret.all.joins(:likes).group("user_id")
Secret.all.joins(:likes).group("user_id")

Secret.joins(:likes).group("user_id")

# Secret.where(user_id: [])
Secret.where(user_id: 1).joins(:likes).group(:content).select('content', "COUNT(likes.id)")

User.first.liked_secrets.joins(:user).select(:content)

User.first.liked_secrets.joins(:user).select("*")
User.first.liked_secrets.joins(:user).select(content, first_name)
User.first.liked_secrets.joins("content")
User.first.liked_secrets.joins(:users).select("content","first_name")
select("content","first_name")
User.first.liked_secrets.joins(:secrets).select("content","first_name")

Secret.first.liking_users
Secret.last.liking_users
#Like.user_id.count

Like.create(user_id: User.find(1).id, secret_id: Secret.first.id)
Like.create(user_id: User.last.id, secret_id: Secret.last.id)
Like.create(user_id: User.first.id, secret_id: Secret.last.id)

Blog.find(2).messages.joins(:user).select(“*”)


##open New Incongnito Window to test other users

# Blog.find(2).messages.joins(:user).select(“*”)
# Product.create(name: "Coffee Mug", description: "with Coding Dojo Logo")
# Product.create(name: "T-Shirt", description: "with Coding Dojo Logo")
# Product.create(name: "Coffee Mug", description: "with Coding Dojo Logo")

# Category.new
# Category.all
# Category.create(name: "Electronics")
# Category.create(name: "Household")
# Category.create(name: "Gardening")
# Category.create(name: "Automotive")
# Category.create(name: "Ninjas")


